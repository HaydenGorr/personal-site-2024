services:

  mongodb:
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: PORTFOLIO
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - mongodb_data:/data/db
    command: ["--auth"]

  admin_panel:
    build:
        context: ./admin_panel
        dockerfile: Dockerfile.dev
        args:
            - LOCAL_ACCESS_CMS=http://cms_server:${CMS_PORT}
            - NEXT_PUBLIC_USER_ACCESS_CMS=${PUBLIC_CMS_URL}
            - LOCAL_ACCESS_AI=http://ai_api:${AI_API_PORT}
            - NEXT_PUBLIC_USER_ACCESS_AI=${PUBLIC_AI_API_URL}
            - PORT=${ADMIN_PANEL_PORT}
    ports:
        - "${ADMIN_PANEL_PORT}:${ADMIN_PANEL_PORT}"
    environment:
        - REVALIDATE_TIME_SECS=5
        - LOCAL_ACCESS_CMS=http://cms_server:${CMS_PORT}
        - NEXT_PUBLIC_USER_ACCESS_CMS=${PUBLIC_CMS_URL}
        - LOCAL_ACCESS_AI=http://ai_api:${AI_API_PORT}
        - NEXT_PUBLIC_USER_ACCESS_AI=${PUBLIC_AI_API_URL}
        - VERSION=1
        - NODE_ENV=${ENVIRONMENT}
        - WATCHPACK_POLLING=true
    volumes:
        - ./admin_panel:/app/admin_panel
    depends_on:
        - cms_server
    restart: unless-stopped

  webserver:
    build:
      context: ./webserver
      dockerfile: Dockerfile.dev
      args:
        - PORT=${WEBSERVER_PORT}
        - REVALIDATE_TIME_SECS=${REVALIDATE_TIME_SECS}
        - LOCAL_ACCESS_CMS=http://cms_server:${CMS_PORT}
        - USER_ACCESS_CMS=${PUBLIC_CMS_URL}
        - LOCAL_ACCESS_AI=http://ai_api:${AI_API_PORT}
        - USER_ACCESS_AI=${PUBLIC_AI_API_URL}
        - VERSION=2.5
    ports:
      - "${WEBSERVER_PORT}:${WEBSERVER_PORT}"
    environment:
      - PORT=${WEBSERVER_PORT}
      - REVALIDATE_TIME_SECS=${REVALIDATE_TIME_SECS}
      - LOCAL_ACCESS_CMS=http://cms_server:${CMS_PORT}
      - USER_ACCESS_CMS=${PUBLIC_CMS_URL}
      - LOCAL_ACCESS_AI=http://ai_api:${AI_API_PORT}
      - USER_ACCESS_AI=${PUBLIC_AI_API_URL}
      - VERSION=2.5
      - WATCHPACK_POLLING=true
    volumes:
      - ./webserver:/app
      - webserver_node_modules:/app/node_modules
    depends_on:
      - cms_server
    restart: unless-stopped
    
  cms_server:
    build:
      context: ./cms_server
      dockerfile: Dockerfile.dev
      args:
        - PORT=${CMS_PORT}
    ports:
      - "${CMS_PORT}:${CMS_PORT}"
    environment:
      - PORT=${CMS_PORT}
      - MONGO_HOST=mongodb
      - MONGO_PATH=mongodb://${MONGO_USER}:${MONGO_PASS}@mongodb:${MONGODB_PORT}/PORTFOLIO
      - ADMIN_ROUTE="http://admin_panel:${ADMIN_PANEL_PORT}"
      - DB_ARTICLES_NAME=articles
      - DB_CHIPS_NAME=chips
      - DB_USERS_NAME=users
      - DB_CATEGORIES_NAME=categories
      - DB_PRIME_NAME=prime
      - DB_IMAGES_NAME=images
      - DB_MDX_NAME=mdx
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - SECRETKEY=${SECRETKEY}
      - REG_KEY=${REG_KEY}
      - HOST_URL=${PUBLIC_CMS_URL}
      - NODE_ENV=${ENVIRONMENT}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODE_LIGHT=${ANTHROPIC_MODE_LIGHT}
      - ANTHROPIC_MODEL_MID=${ANTHROPIC_MODEL_MID}
      - ANTHROPIC_MODEL_HEAVY=${ANTHROPIC_MODEL_HEAVY}
      - WATCHPACK_POLLING=true
    volumes:
      - ./cms_server:/app/cms_server
      - /app/cms_server/node_modules
      - server_data:/app/cms_data
      - /app/cms_data/CMS
      - /app/cms_data/images
      - /app/cms_data/mdx
    depends_on:
      - mongodb
    restart: unless-stopped

volumes:
  mongodb_data:
  admin_panel_node_modules:
  webserver_node_modules:
  ai_api_node_modules:
  cms_server_node_modules:
  server_data:
